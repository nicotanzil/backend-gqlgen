scalar Time

type User {
    id: Int!
    accountName: String!
    profileName: String!
    realName: String!
    email: String!
    password: String!
    balance: Float!
    customURL: String!
    summary: String!

    profilePicture: String!
#    profilePicture: Upload!
    avatar: String!
    avatarFrames: String!
    profileBackground: String!
    miniProfileBackground: String!
    theme: String!

    country: Country!
    games: [Game!]!
    friends: [User!]!

    experience: Int!

    createdAt: Time!
    updatedAt: Time!
    deletedAt: Time!
}

input NewUser {
    accountName: String!
    password: String!
}

type Query {
    users: [User!]!
    getUserById(input: String): User!
    getUserByUrl(input: String): User!
}

type Mutation {
    createUser(user: NewUser, otp: NewOtp): Boolean!
}