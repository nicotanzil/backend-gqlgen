scalar Time

type User {
    id: Int!
    accountName: String!
    profileName: String!
    realName: String!
    email: String!
    password: String!
    balance: Float!
    customURL: String!
    profilePicture: String!
#    profilePicture: Upload!
    country: Country!
    createdAt: Time!
    updatedAt: Time!
    deletedAt: Time!
}

input NewUser {
    accountName: String!
    password: String!
}

type Query {
    users: [User!]!
    getUserById(input: String): User!
}

type Mutation {
    createUser(user: NewUser, otp: NewOtp): Boolean!
}